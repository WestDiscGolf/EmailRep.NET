# ASP.NET Core
# Build and test ASP.NET Core projects targeting .NET Core.
# Add steps that run tests, create a NuGet package, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core

trigger:
- master

pool:
  vmImage: 'ubuntu-latest'

variables:
  buildConfiguration: 'Release'
  DOTNET_CLI_TELEMETRY_OPTOUT: 1
  DOTNET_SKIP_FIRST_TIME_EXPERIENCE: 1

steps:
- task: UseDotNet@2
  displayName: 'Use sdk version'
  inputs:
    packageType: 'sdk'
    version: '3.1.100'
- task: DotNetCoreCLI@2
  displayName: 'Build packages'
  inputs:
    command: 'build'
    arguments: '--configuration $(buildConfiguration)'

- task: DotNetCoreCLI@2
  displayName: dotnet test
  inputs:
    command: 'test'
    arguments: '--configuration $(BuildConfiguration) --no-restore /p:CollectCoverage=true /p:CoverletOutputFormat=cobertura'
    projects: 'tests/**/*.csproj'
    nobuild: true

- script: |
    dotnet tool install -g dotnet-reportgenerator-globaltool
    reportgenerator "-reports:$(Build.SourcesDirectory)/**/**/coverage.cobertura.xml" "-targetdir:$(Build.SourcesDirectory)/CodeCoverage" "-reporttypes:HtmlInline_AzurePipelines;Cobertura"
  displayName: 'Generate Code Coverage Report'

- task: PublishCodeCoverageResults@1
  displayName: 'Publish Code Coverage Report'
  inputs:
    codeCoverageTool: Cobertura
    summaryFileLocation: '$(Build.SourcesDirectory)/CodeCoverage/Cobertura.xml'
    reportDirectory: '$(Build.SourcesDirectory)/CodeCoverage'

- task: DotNetCoreCLI@2
  displayName: 'Create nuget packages'
  inputs:
    command: 'pack'
    packagesToPack: '**/*.csproj'
    nobuild: true
    versioningScheme: 'off'

- task: CopyFiles@2
  displayName: 'Copy Nuget Packages To Release Folder'
  inputs:
    SourceFolder: '$(Build.ArtifactStagingDirectory)'
    Contents: |
      Packages/**/*.nupkg
    TargetFolder: '$(Build.ArtifactStagingDirectory)/Release/NuGet'

- task: PublishBuildArtifacts@1
  displayName: 'Publish Release Artifacts'
  inputs:
    PathtoPublish: '$(Build.ArtifactStagingDirectory)/Release'